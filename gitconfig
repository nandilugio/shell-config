[include]
    path = ~/.gitconfig_host

[user]
	useConfigOnly = true

[core]
  editor = vim
  excludesfile = ~/.gitignore_global
  pager = less -FRSX

[web]
  browser = google-chrome

[color]
  ui = auto

[push]
  default = current

[pull]
  default = current
  rebase = true

[branch]
  #autosetuprebase = always
  mergeoptions = --no-ff

[rerere]
	enabled = true

[diff]
  tool = vimdiff
  #noprefix = true  # Breaks stash-index alias since it reverse-applies a temp stash patch. Added --no-prefix to diff aliases.

[merge]
  tool = vimdiff
  conflictstyle = diff3  # for vimdiff
  #tool = smerge

[mergetool "smerge"]
	cmd = smerge mergetool \"$BASE\" \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
	trustExitCode = true

[alias]
  a = add
  aa = add --all
  b = branch
  ba = branch --all
  bm = branch -m
  bt = branch --track
  c = commit
  ca = !git add --all . && git commit -a 
  caa = !git add --all . && git commit -a --amend 
  caane = !git add --all . && git commit -a --amend --no-edit
  cm = commit -m
  cam = !git add --all . && git commit -am 
  caam = !git add --all . && git commit -a --amend -m
  co = checkout
  cob = checkout -b
  cp = cherry-pick
  d = diff --no-prefix
  ds = diff --no-prefix --staged
  dt = difftool
  dts = difftool --staged
  f = fetch
  l = log --oneline
  lfp = log --oneline --first-parent
  lo = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s%Cblue %Cgreen(%cr) %Cblue[%cn]%Creset' --decorate
  ll = log --graph --oneline
  llo = log --graph --abbrev-commit --pretty=format:'%C(yellow)%h%Creset%Cred%d%Creset %s %Cgreen(%cr) %Cblue[%an]%Creset' --
  l1 = log -1 --pretty=%B
  m = merge
  ma = merge --abort
  mc = !git add --all . && git merge --continue
  mt = mergetool
  mum = merge upstream/master
  pl = pull
  ps = push
  psf = push --force-with-lease
  psu = push -u
  r = rebase
  ra = rebase --abort
  rc = !git add --all . && git rebase --continue
  ri = rebase -i
  ri1 = rebase -i HEAD~1
  ri2 = rebase -i HEAD~2
  ri3 = rebase -i HEAD~3
  ri4 = rebase -i HEAD~4
  ri5 = rebase -i HEAD~5
  ri6 = rebase -i HEAD~6
  ri7 = rebase -i HEAD~7
  ri8 = rebase -i HEAD~8
  ri9 = rebase -i HEAD~9
  riod = rebase -i origin/develop
  riom = rebase -i origin/master
  rl = reflog
  rod = !git fetch && git rebase origin/develop
  rom = !git fetch && git rebase origin/master
  rs = reset
  rsh = reset HEAD
  rsh1 = reset HEAD~1
  rsh2 = reset HEAD~2
  rsh3 = reset HEAD~3
  rsh4 = reset HEAD~4
  rsh5 = reset HEAD~5
  rsh6 = reset HEAD~6
  rsh7 = reset HEAD~7
  rsh8 = reset HEAD~8
  rsh9 = reset HEAD~9
  s = status
  sh = show
  shf = show --pretty='' --name-only
  sl = diff-tree --name-status -r HEAD 
  st = stash
  stm = stash save
  stu = stash save
  # TODO: both above the same?
  sta = !git add --all . && git stash  
  stap = stash apply
  std = stash drop
  stl = stash list
  stp = stash pop
  sts = stash-staged
  stsh = stash show 

  wip = !git add --all . && git commit -m \"wip [ci skip]\"
  dewip = ![ \"$(git log -1 --pretty=%B)\" = \"wip [ci skip]\" ] && git reset HEAD^ && git add --all .
  f-dirty = !git status -u --porcelain | sed -E 's/^ ?[^ ]+ +//' | xargs -I% ls -d "%" 2>/dev/null
  f-last-commit = !git d --name-only HEAD~1 | xargs -I% ls -d "%" 2>/dev/null
  f-branch = !git d --name-only origin/master | xargs -I% ls -d "%" 2>/dev/null

  stash-staged = "!f() { \
      ! git diff --cached --exit-code --quiet && \
      git stash push --quiet --keep-index -m \"temp for stash-index\" && \
      git stash push \"$@\" && \
      git stash pop --quiet stash@{1} && \
      git stash show -p | git apply -R; }; f"


  remove-merged-branches = !git branch --merged | grep -v \"\\*\" | grep -v master | grep -v develop | xargs -n 1 git branch -d
